准备新的feature1分支，继续我们的新分支开发：
  git checkout -b feature1
  修改readme.txt

在feature1分支上提交：
  git add readme.txt 
  git commit -m "AND simple"

切换到master分支：
  git checkout master
  在master分支上把readme.txt文件修改
提交：
  git add readme.txt 
  git commit -m "& simple"
  
现在，master分支和feature1分支各自都分别有新的提交
试着合并：
  git merge feature1
这种情况下，Git无法执行“快速合并”，
只能试图把各自的修改合并起来，但这种合并就可能会有冲突

必须手动解决冲突后再提交。
  git status也可以告诉我们冲突的文件：
修改后保存：
再提交：
  git add readme.txt 
  git commit -m "conflict fixed"
  用带参数的git log也可以看到分支的合并情况：
    git log --graph --pretty=oneline --abbrev-commit
最后，删除feature1分支：
  git branch -d feature1
